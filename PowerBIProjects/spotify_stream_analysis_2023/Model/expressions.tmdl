expression 'Errors in Spotify_Dataset' =
		let
		Source = Spotify_Dataset,
		  #"Detected Type Mismatches" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "The type of the value does not match the type of the column.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Source, pairs),
		  #"Added Index" = Table.AddIndexColumn(#"Detected Type Mismatches", "Row Number" ,1),
		  #"Kept Errors" = Table.SelectRowsWithErrors(#"Added Index", {"track_name", "artist(s)_name", "artist_count", "released_year", "released_month", "released_day", "in_spotify_playlists", "in_spotify_charts", "streams", "in_apple_playlists", "in_apple_charts", "in_deezer_playlists", "in_deezer_charts", "in_shazam_charts", "bpm", "key", "mode", "danceability_%", "valence_%", "energy_%", "acousticness_%", "instrumentalness_%", "liveness_%", "speechiness_%", "cover_url"}),
		  #"Reordered Columns" = Table.ReorderColumns(#"Kept Errors", {"Row Number", "track_name", "artist(s)_name", "artist_count", "released_year", "released_month", "released_day", "in_spotify_playlists", "in_spotify_charts", "streams", "in_apple_playlists", "in_apple_charts", "in_deezer_playlists", "in_deezer_charts", "in_shazam_charts", "bpm", "key", "mode", "danceability_%", "valence_%", "energy_%", "acousticness_%", "instrumentalness_%", "liveness_%", "speechiness_%", "cover_url"})
		in
		    #"Reordered Columns"
	queryGroup: 'Query Errors - 2024/07/26 11:03:40'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

/// Bihaags dataset dir
expression Bihaag_DIR = "C:\Users\Bihaag Nepaul\Downloads\Spotify Dataset\Onyx Data DataDNA Datatset Challenge - Spotify Most Streamed Songs 2023 Dataset - October 2023 (1)\Onyx Data DataDNA Datatset Challenge - Spotify Most Streamed Songs 2023 Dataset - October 2023.xlsx" meta [IsParameterQuery=true, Type="Text", IsParameterQueryRequired=true]

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Text

/// Rivashans Dataset Dir
expression Rivashan_DIR = "C:\Users\Rivashan Govender\Documents\Rivashan_Govender\PowerBI\YouTube - Spotify Analysis\Onyx Data DataDNA Datatset Challenge - Spotify Most Streamed Songs 2023 Dataset - October 2023\Spotify Most Streamed Songs 2023 October 2023.xlsx" meta [IsParameterQuery=true, Type="Text", IsParameterQueryRequired=true]

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Text

expression Ndivhu_DIR = "C:\Users\NdivhudzannyiT\Downloads\Onyx Data DataDNA Datatset Challenge - Spotify Most Streamed Songs 2023 Dataset - October 2023\Onyx Data DataDNA Datatset Challenge - Spotify Most Streamed Songs 2023 Dataset - October 2023.xlsx" meta [IsParameterQuery=true, Type="Text", IsParameterQueryRequired=true]

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Text

expression Pranav_DIR = "C:\Users\Pranav Bhoola\Desktop\Pranav_Bhoola\DatabaseAdministration\PowerBIReports\SpotifyDashboard\Datatset - Spotify Most Streamed Songs 2023 Dataset - October 2023.xlsx" meta [IsParameterQuery=true, Type="Text", IsParameterQueryRequired=true]

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Text

