table Spotify_Dataset

	measure 'Max Streams' = MAX(Spotify_Dataset[streams])
		formatString: 0

	measure 'Top Song Streams' =
			
			CALCULATE(
			    SUM(Spotify_Dataset[streams]),
			    Spotify_Dataset[streams] = MAX(Spotify_Dataset[streams])
			)
		formatString: 0

	measure 'Average Stream per Year' =
			
			CALCULATE(
			    AVERAGE(Spotify_Dataset[streams]),
			    ALLEXCEPT(Spotify_Dataset, Spotify_Dataset[Date])
			)

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Top Song vs Avg Value' =
			
			DIVIDE(
			    [Top Song Streams] - [Average Stream per Year],
			    [Average Stream per Year]
			)

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Top song vs AVG' =
			
			VAR X = [Top Song vs Avg Value]
			RETURN
			IF(
			    X > 0,
			    FORMAT(X, "#0.0%") & " " & UNICHAR(9650),
			    FORMAT(X, "#0.0%") & " " & UNICHAR(9660)
			)

	measure 'Image HTML' =
			
			Var x =
			CALCULATE(
			    MAX(Spotify_Dataset[cover_url]),
			    Spotify_Dataset[streams] = MAX(Spotify_Dataset[streams])
			)
			
			RETURN
			
			"
			<!DOCTYPE html>
			<html lang='en'>
			<head>
			    <meta charset='UTF-8'>
			    <title>Image Cropping</title>
			    <style>
			        .image-container {
			            width: 318px; /* Width of the container */
			            height: 100px; /* Height of the container */
			            overflow: hidden; /* Hide parts of the image that don't fit */
			            border-radius: 12px; /* Rounded corners */
			            position: relative; /* Relative positioning for the child element */
			        }
			        .image {
			            object-fit: cover; /* Cover the entire container */
			            object-position: center; /* Center the image */
			            width: 100%; /* Full width */
			            height: 100%; /* Full height */
			        }
			    </style>
			</head>
			<body>
			    <div class='image-container'>
			        <img src='"&x&"' alt='Album Cover' class='image'>
			    </div>
			</body>
			</html>
			"

	measure Percent_Val =
			
			AVERAGE([energy_%])

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _Track = COUNT(Spotify_Dataset[track_name])
		formatString: 0

	column track_name
		dataType: string
		summarizeBy: none
		sourceColumn: track_name

		annotation SummarizationSetBy = Automatic

	column artist(s)_name
		dataType: string
		summarizeBy: none
		sourceColumn: artist(s)_name

		annotation SummarizationSetBy = Automatic

	column artist_count
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: artist_count

		annotation SummarizationSetBy = Automatic

	column released_year
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: released_year

		annotation SummarizationSetBy = Automatic

	column released_month
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: released_month

		annotation SummarizationSetBy = Automatic

	column released_day
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: released_day

		annotation SummarizationSetBy = Automatic

	column in_spotify_playlists
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_spotify_playlists

		annotation SummarizationSetBy = Automatic

	column in_spotify_charts
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_spotify_charts

		annotation SummarizationSetBy = Automatic

	column streams
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: streams

		annotation SummarizationSetBy = Automatic

	column in_apple_playlists
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_apple_playlists

		annotation SummarizationSetBy = Automatic

	column in_apple_charts
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_apple_charts

		annotation SummarizationSetBy = Automatic

	column in_deezer_playlists
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_deezer_playlists

		annotation SummarizationSetBy = Automatic

	column in_deezer_charts
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_deezer_charts

		annotation SummarizationSetBy = Automatic

	column in_shazam_charts
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: in_shazam_charts

		annotation SummarizationSetBy = Automatic

	column bpm
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: bpm

		annotation SummarizationSetBy = Automatic

	column key
		dataType: string
		summarizeBy: none
		sourceColumn: key

		annotation SummarizationSetBy = Automatic

	column mode
		dataType: string
		summarizeBy: none
		sourceColumn: mode

		annotation SummarizationSetBy = Automatic

	column danceability_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: danceability_%

		annotation SummarizationSetBy = Automatic

	column valence_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: valence_%

		annotation SummarizationSetBy = Automatic

	column energy_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: energy_%

		annotation SummarizationSetBy = Automatic

	column acousticness_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: acousticness_%

		annotation SummarizationSetBy = Automatic

	column instrumentalness_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: instrumentalness_%

		annotation SummarizationSetBy = Automatic

	column liveness_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: liveness_%

		annotation SummarizationSetBy = Automatic

	column speechiness_%
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: speechiness_%

		annotation SummarizationSetBy = Automatic

	column cover_url
		dataType: string
		summarizeBy: none
		sourceColumn: cover_url

		annotation SummarizationSetBy = Automatic

	column Date = DATE([released_year], [released_month], [released_day])
		dataType: dateTime
		formatString: Short Date
		summarizeBy: none
		isDataTypeInferred

		changedProperty = DataType

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	partition Spotify_Dataset = m
		mode: import
		source =
				let
				    Source = Excel.Workbook(File.Contents(Pranav_DIR), null, true),
				    #"Spotify Dataset_Sheet" = Source{[Item="Spotify Dataset",Kind="Sheet"]}[Data],
				    #"Promoted Headers" = Table.PromoteHeaders(#"Spotify Dataset_Sheet", [PromoteAllScalars=true]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"track_name", type any}, {"artist(s)_name", type text}, {"artist_count", Int64.Type}, {"released_year", Int64.Type}, {"released_month", Int64.Type}, {"released_day", Int64.Type}, {"in_spotify_playlists", Int64.Type}, {"in_spotify_charts", Int64.Type}, {"streams", Int64.Type}, {"in_apple_playlists", Int64.Type}, {"in_apple_charts", Int64.Type}, {"in_deezer_playlists", Int64.Type}, {"in_deezer_charts", Int64.Type}, {"in_shazam_charts", Int64.Type}, {"bpm", Int64.Type}, {"key", type text}, {"mode", type text}, {"danceability_%", Int64.Type}, {"valence_%", Int64.Type}, {"energy_%", Int64.Type}, {"acousticness_%", Int64.Type}, {"instrumentalness_%", Int64.Type}, {"liveness_%", Int64.Type}, {"speechiness_%", Int64.Type}, {"cover_url", type text}}),
				    #"Removed Errors" = Table.RemoveRowsWithErrors(#"Changed Type", {"streams"})
				in
				    #"Removed Errors"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

